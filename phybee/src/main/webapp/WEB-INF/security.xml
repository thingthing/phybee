<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<global-method-security pre-post-annotations="enabled" />

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">

		<headers>
			<cache-control />
		</headers>
		<access-denied-handler error-page="/accessdenied" />
		
		<intercept-url pattern="/login" access="isAnonymous()" />
		<intercept-url pattern="/logout" access="permitAll" />
		<intercept-url pattern="/register" access="isAnonymous()" />
		<intercept-url pattern="/accessdenied" access="permitAll" />	
		<intercept-url pattern="/home" access="permitAll" />
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/changePwd" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/reservation/**" access="hasRole('ROLE_USER')" />

		<form-login login-page="/login" default-target-url="/"
			authentication-failure-url="/login?error" username-parameter="email"
			password-parameter="password" login-processing-url="/auth/login_check" />

		<logout logout-success-url="/home?logout" delete-cookies="JSESSIONID" />

	</http>


	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="bcrypt" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email,password,enabled from account where email=?"
				authorities-by-username-query="select email,role from account_roles where 
				email=?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>